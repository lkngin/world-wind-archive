package org.wwc.ammianus.tomcat.tileserver;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.HashMap;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * <p>This servlet handles requests from the World Wind.NET application and returns 
 * tile images or error codes as appropriate. This was a port to Java of a ASP.NET file posted
 * at <a>http://worldwindcentral.com/wiki/Data_serving_scripts</a></p>
 * 
 * @author ammianus
 * @version 0.1
 * 
 * 
 */
public class TileRequestHandler extends HttpServlet {
	
	/**
	 * Generated by Eclipse
	 */
	private static final long serialVersionUID = -6596187549520730077L;
	/**
	 * settings Map which theoretically could be extended for any layer used in WW
	 * for each layer, use the <DataSetName></DataSetName> tag value from @Images.xml file
	 * create three map entries <DataSetName>, <DataSetName>_EXT, <DataSetName>_MIME
	 */
	private HashMap<String, String> _settings;
	
	private int _requestNumber;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public TileRequestHandler() {
        super();
        //use these setting which theoretically could be extended for any layer used in WW
        //for each layer, use the <DataSetName></DataSetName> tag value from @Images.xml file
        //create three map entries <DataSetName>, <DataSetName>_EXT, <DataSetName>_MIME
        _settings = new HashMap<String,String>();
        _settings.put("geocover2000", "C:\\Users\\Public\\WorldWindCache\\Cache\\Earth\\Images\\NASA Landsat Imagery\\Geocover 2000");
        _settings.put("geocover2000_EXT", ".jpg");
        _settings.put("geocover2000_MIME", "image/jpeg");
        
        _requestNumber = 0;
    }

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	//increment counter
    	_requestNumber++;
    	
    	//Un-comment this to test whether WW handles 503 return code with Retry-After header
    	//
    	//first request we will send an error with a retry-after header
    	//
    	/*if(_requestNumber == 1){
    		response.setStatus(503);
    		//this appears to be case insensitive for WorldWind, I just picked a random retry-after period
    		response.setHeader("retry-after", "38");
    		System.out.println(_requestNumber+":Response: 503, with retry-after: 38");
    		return;
    	}*/
    	
    	try{
    	
    		
    	//column	
    	int X = Integer.parseInt(request.getParameter("X").toString());
    	//row
    	int Y = Integer.parseInt(request.getParameter("Y").toString());
    	//level
    	int L = Integer.parseInt(request.getParameter("L").toString());
    	//DataSet name
    	String T = request.getParameter("T").toString(); //T = Dataset in WorldWind parlance
    	
    	
    	//Un-comment this to test whether WW handles 500 return code
    	//
    	//if(T.equals("geocover2000")){
    	//	throw new Exception("Force return of 500 - Server Error");	
    	//}
    	
    	//Arguments are in this format URL sent from world wind
    	//e.g. http://localhost:8080/TomcatTileServer/TileRequestHandler?T=geocover2000&L=0&X=47&Y=21
    	String filePath = _settings.get(T);//WebConfigurationManager.AppSettings[T];

    	String fileExt = _settings.get(T + "_EXT");
    	if(L < 3){
    		DecimalFormat df = new DecimalFormat("0000");	
    		filePath += "\\"+L + "\\" + df.format(Y) + "\\" + df.format(Y) + "_" + df.format(X) + fileExt;
    	}else{
    		filePath += "\\level"+(L+1)+fileExt;
    	}
    	//request.get
    	System.out.println(_requestNumber+":Requested File: "+filePath);
    	File file = new File(filePath);

    	//if file (image for requested tile) is not found on server, return 404
    	if (!file.exists())
    	{
    		response.sendError(HttpServletResponse.SC_NOT_FOUND, "Not Found");
    	}
    	else
    	{
    		//set content length to file size
    		response.setContentLength((int) file.length());
    		//get mime type for this layer
    		response.setContentType(_settings.get(T + "_MIME"));
    		//get the output stream for the response, this will have the file written to it
    		ServletOutputStream stream = response.getOutputStream();
    		
    		//read the file contents and write them to the outputstream
    		FileInputStream fis = new FileInputStream(file);
    		byte[] bytes = new byte[1024];
    		int counter = 0;
    		while(counter < file.length()){
    			fis.read(bytes);
    			counter += 1024;
    			stream.write(bytes);
    		}
    		fis.close();
    		stream.flush();
    		stream.close();
    		
    		//done with response
    	}
    	}catch(Exception e){
    		//uncaught Exception return 500 error
    		response.sendError(500,e.getMessage());
    		System.out.println(_requestNumber+":Response: send 500 error");
    	}

    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

}

